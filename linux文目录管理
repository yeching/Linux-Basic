#################################################################################################
参考：鸟哥的私房菜
------------------------------------------------------------------------------------------------- 
1. 目录与路径
　　1.1 相对路径与绝对路径
　　1.2 目录的相关操作： cd, pwd, mkdir, rmdir
　　1.3 关於运行档路径的变量： $PATH
2. 文件与目录管理
　　2.1 文件与目录的检视： ls
　　2.2 复制、删除与移动： cp, rm, mv
　　2.3 取得路径的文件名称与目录名称
3. 文件内容查阅：
　　3.1 直接检视文件内容： cat, tac, nl
　　3.2 可翻页检视： more, less
　　3.3 数据撷取： head, tail
　　3.4 非纯文字档： od
　　3.5 修改文件时间与建置新档： touch
4. 文件与目录的默认权限与隐藏权限
　　4.1 文件默认权限：umask
　　4.2 文件隐藏属性： chattr, lsattr
　　4.4 文件特殊权限：SUID, SGID, SBIT, 权限配置
　　4.3 观察文件类型：file
5. 命令与文件的搜寻：
　　5.1 命令档名的搜寻：which
　　5.2 文件档名的搜寻：whereis, locate, find
6. 极重要！权限与命令间的关系：
7. 重点回顾
8. 本章习题
-------------------------------------------------------------------------------------------------
4.文件与目录的默认权限与隐藏权限
	文件默认权限：umask
		[root@www ~]# umask
		0022             <==与一般权限有关的是后面三个数字！第一个是特殊权限用的
		[root@www ~]# umask -S
		u=rwx,g=rx,o=rx
		要注意的是，umask 的分数指的是『该默认值需要减掉的权限！』

		创建文件时：(-rw-rw-rw-) - (-----w--w-) ==> -rw-r--r--
		创建目录时：(drwxrwxrwx) - (d----w--w-) ==> drwxr-xr-x
    umask的利用与重要性：专题制作
		[root@www ~]# umask 002
	文件隐藏属性：
		    chattr (配置文件隐藏属性)
			lsattr (显示文件隐藏属性)
	****文件特殊权限： SUID, SGID, SBIT*****
    Set UID
		当 s 这个标志出现在文件拥有者的 x 权限上时，例如刚刚提到的 /usr/bin/passwd 这个文件的权限状态：『-rwsr-xr-x』，
		此时就被称为 Set UID，简称为 SUID 的特殊权限。
	Set GID
		当 s 标志在文件拥有者的 x 项目为 SUID，那 s 在群组的 x 时则称为 Set GID, SGID 罗！
	Sticky Bit
		这个 Sticky Bit, SBIT 目前只针对目录有效，对於文件已经没有效果了。
	SUID/SGID/SBIT 权限配置
		实例：
			[root@www ~]# cd /tmp
			[root@www tmp]# touch test                  <==创建一个测试用空档
			[root@www tmp]# chmod 4755 test; ls -l test <==加入具有 SUID 的权限
			-rwsr-xr-x 1 root root 0 Sep 29 03:06 test
			[root@www tmp]# chmod 6755 test; ls -l test <==加入具有 SUID/SGID 的权限
			-rwsr-sr-x 1 root root 0 Sep 29 03:06 test
			[root@www tmp]# chmod 1755 test; ls -l test <==加入 SBIT 的功能！
			-rwxr-xr-t 1 root root 0 Sep 29 03:06 test
			[root@www tmp]# chmod 7666 test; ls -l test <==具有空的 SUID/SGID 权限
			-rwSrwSrwT 1 root root 0 Sep 29 03:06 test
-------------------------------------------------------------------------------------------------
5. 命令与文件的搜寻：
命令档名的搜寻：
	which (寻找『运行档』)
		[root@www ~]# which [-a] command
		选项或参数：
		-a ：将所有由 PATH 目录中可以找到的命令均列出，而不止第一个被找到的命令名称
		root@www:~# which ifconfig
		/sbin/ifconfig
-------------------------------------------------------------------------------------------------
文件档名的搜寻：
	再来谈一谈怎么搜寻文件吧！在 Linux 底下也有相当优异的搜寻命令呦！通常 find 不很常用的！因为速度慢之外， 也很操硬盘！
	通常我们都是先使用 whereis 或者是 locate 来检查，如果真的找不到了，才以 find 来搜寻呦！ 为什么呢？因为 whereis 与 locate 
	是利用数据库来搜寻数据，所以相当的快速，而且并没有实际的搜寻硬盘， 比较省时间啦！
-------------------------------------------------------------------------------------------------
    whereis (寻找特定文件)
		[root@www ~]# whereis [-bmsu] 文件或目录名
		选项与参数：
		-b    :只找 binary 格式的文件
		-m    :只找在说明档 manual 路径下的文件
		-s    :只找 source 来源文件
		-u    :搜寻不在上述三个项目当中的其他特殊文件
		root@www:~# whereis ifconfig
		ifconfig: /sbin/ifconfig /usr/share/man/man8/ifconfig.8.gz
-------------------------------------------------------------------------------------------------
    locate
		[root@www ~]# locate [-ir] keyword
		选项与参数：
		-i  ：忽略大小写的差异；
		-r  ：后面可接正规表示法的显示方式
		root@www:~# locate ifconfig
		/sbin/ifconfig
		/usr/share/man/de/man8/ifconfig.8.gz
		/usr/share/man/fr/man8/ifconfig.8.gz
		/usr/share/man/man8/ifconfig.8.gz
		/usr/share/man/pt_BR/man8/ifconfig.8.gz
		/usr/src/linux-headers-3.13.0-66/tools/hv/hv_set_ifconfig.sh
		/usr/src/linux-headers-3.13.0-67/tools/hv/hv_set_ifconfig.sh
		/usr/src/linux-headers-3.19.0-30/tools/hv/hv_set_ifconfig.sh
		/usr/src/linux-headers-3.19.0-31/tools/hv/hv_set_ifconfig.sh
		/usr/src/linux-headers-3.19.0-32/tools/hv/hv_set_ifconfig.sh
	
	locate 寻找的数据是由『已创建的数据库 /var/lib/mlocate/』 里面的数据所搜寻到的
	升级 locate 数据库的方法非常简单，直接输入『 updatedb 』就可以了！ updatedb 命令会去读取 /etc/updatedb.conf 
	这个配置档的配置，然后再去硬盘里面进行搜寻档名的动作， 最后就升级整个数据库文件罗！

    updatedb：根据 /etc/updatedb.conf 的配置去搜寻系统硬盘内的档名，并升级 /var/lib/mlocate 内的数据库文件；
    locate：依据 /var/lib/mlocate 内的数据库记载，找出使用者输入的关键字档名。
-------------------------------------------------------------------------------------------------
    find

		[root@www ~]# find [PATH] [option] [action]
		选项与参数：
		1. 与时间有关的选项：共有 -atime, -ctime 与 -mtime ，以 -mtime 说明
		   -mtime  n ：n 为数字，意义为在 n 天之前的『一天之内』被更动过内容的文件；
		   -mtime +n ：列出在 n 天之前(不含 n 天本身)被更动过内容的文件档名；
		   -mtime -n ：列出在 n 天之内(含 n 天本身)被更动过内容的文件档名。
		   -newer file ：file 为一个存在的文件，列出比 file 还要新的文件档名
		实例：

			范例一：将过去系统上面 24 小时内有更动过内容 (mtime) 的文件列出
			[root@www ~]# find / -mtime 0
			# 那个 0 是重点！0 代表目前的时间，所以，从现在开始到 24 小时前，
			# 有变动过内容的文件都会被列出来！那如果是三天前的 24 小时内？
			# find / -mtime 3 有变动过的文件都被列出的意思！

			范例二：寻找 /etc 底下的文件，如果文件日期比 /etc/passwd 新就列出
			[root@www ~]# find /etc -newer /etc/passwd
			# -newer 用在分辨两个文件之间的新旧关系是很有用的！
		选项与参数：
		2. 与使用者或群组名称有关的参数：
		   -uid n ：n 为数字，这个数字是使用者的帐号 ID，亦即 UID ，这个 UID 是记录在
				    /etc/passwd 里面与帐号名称对应的数字。这方面我们会在第四篇介绍。
		   -gid n ：n 为数字，这个数字是群组名称的 ID，亦即 GID，这个 GID 记录在
				    /etc/group，相关的介绍我们会第四篇说明～
		   -user name ：name 为使用者帐号名称喔！例如 dmtsai 
		   -group name：name 为群组名称喔，例如 users ；
		   -nouser    ：寻找文件的拥有者不存在 /etc/passwd 的人！
		   -nogroup   ：寻找文件的拥有群组不存在於 /etc/group 的文件！
				        当你自行安装软件时，很可能该软件的属性当中并没有文件拥有者，
				        这是可能的！在这个时候，就可以使用 -nouser 与 -nogroup 搜寻。
		实例：
			范例三：搜寻 /home 底下属於 vbird 的文件
			[root@www ~]# find /home -user vbird
			# 这个东西也很有用的～当我们要找出任何一个使用者在系统当中的所有文件时，
			# 就可以利用这个命令将属於某个使用者的所有文件都找出来喔！

			范例四：搜寻系统中不属於任何人的文件
			[root@www ~]# find / -nouser
			# 透过这个命令，可以轻易的就找出那些不太正常的文件。
			# 如果有找到不属於系统任何人的文件时，不要太紧张，
			# 那有时候是正常的～尤其是你曾经以原始码自行编译软件时。
		选项与参数：
		3. 与文件权限及名称有关的参数：
		   -name filename：搜寻文件名称为 filename 的文件；
		   -size [+-]SIZE：搜寻比 SIZE 还要大(+)或小(-)的文件。这个 SIZE 的规格有：
				           c: 代表 byte， k: 代表 1024bytes。所以，要找比 50KB
				           还要大的文件，就是『 -size +50k 』
		   -type TYPE    ：搜寻文件的类型为 TYPE 的，类型主要有：一般正规文件 (f),
				           装置文件 (b, c), 目录 (d), 连结档 (l), socket (s), 
				           及 FIFO (p) 等属性。
		   -perm mode  ：搜寻文件权限『刚好等於』 mode 的文件，这个 mode 为类似 chmod
				         的属性值，举例来说， -rwsr-xr-x 的属性为 4755 ！
		   -perm -mode ：搜寻文件权限『必须要全部囊括 mode 的权限』的文件，举例来说，
				         我们要搜寻 -rwxr--r-- ，亦即 0744 的文件，使用 -perm -0744，
				         当一个文件的权限为 -rwsr-xr-x ，亦即 4755 时，也会被列出来，
				         因为 -rwsr-xr-x 的属性已经囊括了 -rwxr--r-- 的属性了。
		   -perm +mode ：搜寻文件权限『包含任一 mode 的权限』的文件，举例来说，我们搜寻
				         -rwxr-xr-x ，亦即 -perm +755 时，但一个文件属性为 -rw-------
				         也会被列出来，因为他有 -rw.... 的属性存在！
		实例：
			范例五：找出档名为 passwd 这个文件
			[root@www ~]# find / -name passwd
			# 利用这个 -name 可以搜寻档名啊！

			范例六：找出 /var 目录下，文件类型为 Socket 的档名有哪些？
			[root@www ~]# find /var -type s
			# 这个 -type 的属性也很有帮助喔！尤其是要找出那些怪异的文件，
			# 例如 socket 与 FIFO 文件，可以用 find /var -type p 或 -type s 来找！

			范例七：搜寻文件当中含有 SGID 或 SUID 或 SBIT 的属性
			[root@www ~]# find / -perm +7000 
			# 所谓的 7000 就是 ---s--s--t ，那么只要含有 s 或 t 的就列出，
			# 所以当然要使用 +7000 ，使用 -7000 表示要含有 ---s--s--t 的所有三个权限，
			# 因此，就是 +7000 ～了乎？
		选项与参数：
		4. 额外可进行的动作：
		   -exec command ：command 为其他命令，-exec 后面可再接额外的命令来处理搜寻到
				           的结果。
		   -print        ：将结果列印到萤幕上，这个动作是默认动作！
		实例：
			范例八：将上个范例找到的文件使用 ls -l 列出来～
			[root@www ~]# find / -perm +7000 -exec ls -l {} \;
			# 注意到，那个 -exec 后面的 ls -l 就是额外的命令，命令不支持命令别名，
			# 所以仅能使用 ls -l 不可以使用 ll 喔！注意注意！

			范例九：找出系统中，大於 1MB 的文件
			[root@www ~]# find / -size +1000k
			# 虽然在 man page 提到可以使用 M 与 G 分别代表 MB 与 GB，
			# 不过，俺却试不出来这个功能～所以，目前应该是仅支持到 c 与 k 吧！
	

-------------------------------------------------------------------------------------------------
总结：
1.文件默认权限：umask
2.umask的利用与重要性：专题制作
3.文件特殊权限： SUID, SGID, SBIT
4.命令与文件的搜寻：
命令档名的搜寻：
	which (寻找『运行档』)
文件档名的搜寻：
	whereis
	locate
	find
updatedb：根据 /etc/updatedb.conf 的配置去搜寻系统硬盘内的档名，并升级 /var/lib/mlocate 内的数据库文件；
locate：依据 /var/lib/mlocate 内的数据库记载，找出使用者输入的关键字档名。
